SuccessConsole Output

Started by user Narendra Thota
03:10:40 Connecting to https://api.github.com using /****** (Github Global Credential)
Obtained Jenkinsfile from ef8ebce22bc8628fc00f61e1b0f41eb4a94dbf96
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] stage
[Pipeline] { (checkout)
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/_resources_with_Terraform_master
[Pipeline] {
[Pipeline] cleanWs
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] done
[Pipeline] checkout
using credential Github-Jenkins
Cloning the remote Git repository
Cloning with configured refspecs honoured and without tags
Cloning repository https://github.com/techalavya/terraform.git
 > git init /var/lib/jenkins/workspace/_resources_with_Terraform_master # timeout=10
Fetching upstream changes from https://github.com/techalavya/terraform.git
 > git --version # timeout=10
using GIT_ASKPASS to set credentials Github Global Credential
 > git fetch --no-tags --progress -- https://github.com/techalavya/terraform.git +refs/heads/master:refs/remotes/origin/master # timeout=10
 > git config remote.origin.url https://github.com/techalavya/terraform.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/master:refs/remotes/origin/master # timeout=10
 > git config remote.origin.url https://github.com/techalavya/terraform.git # timeout=10
Fetching without tags
Fetching upstream changes from https://github.com/techalavya/terraform.git
using GIT_ASKPASS to set credentials Github Global Credential
 > git fetch --no-tags --progress -- https://github.com/techalavya/terraform.git +refs/heads/master:refs/remotes/origin/master # timeout=10
Checking out Revision ef8ebce22bc8628fc00f61e1b0f41eb4a94dbf96 (master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ef8ebce22bc8628fc00f61e1b0f41eb4a94dbf96 # timeout=10
Commit message: "update chdir to deployment folder in each stage under dir block"
 > git rev-list --no-walk 0c5f5ea0bc84770b37d32af0b4aad75dddb1c97c # timeout=10
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (init)
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/_resources_with_Terraform_master
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] {
[Pipeline] sh
+ pwd
/var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] sh
+ ls -ltra
total 8
-rw-r--r--. 1 jenkins jenkins 241 Dec 26 03:10 main.tf
-rw-r--r--. 1 jenkins jenkins 111 Dec 26 03:10 locals.tf
drwxr-xr-x. 2 jenkins jenkins  38 Dec 26 03:10 .
drwxr-xr-x. 4 jenkins jenkins  32 Dec 26 03:10 ..
[Pipeline] sh
+ /usr/local/bin/terraform init
Initializing modules...
- my_ec2 in ../../../../../../modules/compute/ec2
- my_vpc in ../../../../../../modules/network/vpc

Initializing the backend...

Initializing provider plugins...
- Checking for available provider plugins...
- Downloading plugin for provider "aws" (hashicorp/aws) 2.43.0...

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (plan)
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/_resources_with_Terraform_master
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] {
[Pipeline] sh
+ pwd
/var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] sh
+ ls -ltra
total 8
-rw-r--r--. 1 jenkins jenkins 241 Dec 26 03:10 main.tf
-rw-r--r--. 1 jenkins jenkins 111 Dec 26 03:10 locals.tf
drwxr-xr-x. 4 jenkins jenkins  32 Dec 26 03:10 ..
drwxr-xr-x. 3 jenkins jenkins  56 Dec 26 03:10 .
drwxr-xr-x. 4 jenkins jenkins  36 Dec 26 03:10 .terraform
[Pipeline] sh
+ /usr/local/bin/terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.my_ec2.aws_instance.ec2_app will be created
  + resource "aws_instance" "ec2_app" {
      + ami                          = "ami-0520e698dd500b1d1"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t2.micro"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = (known after apply)
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = (known after apply)
      + tags                         = {
          + "Name" = "app03"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = (known after apply)
      + vpc_security_group_ids       = (known after apply)

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (apply)
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/_resources_with_Terraform_master
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] {
[Pipeline] sh
+ pwd
/var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] sh
+ ls -ltra
total 8
-rw-r--r--. 1 jenkins jenkins 241 Dec 26 03:10 main.tf
-rw-r--r--. 1 jenkins jenkins 111 Dec 26 03:10 locals.tf
drwxr-xr-x. 4 jenkins jenkins  32 Dec 26 03:10 ..
drwxr-xr-x. 4 jenkins jenkins  36 Dec 26 03:10 .terraform
drwxr-xr-x. 3 jenkins jenkins  56 Dec 26 03:11 .
[Pipeline] sh
+ /usr/local/bin/terraform apply -auto-approve
module.my_ec2.aws_instance.ec2_app: Creating...
module.my_ec2.aws_instance.ec2_app: Still creating... [11s elapsed]
module.my_ec2.aws_instance.ec2_app: Still creating... [21s elapsed]
module.my_ec2.aws_instance.ec2_app: Still creating... [32s elapsed]
module.my_ec2.aws_instance.ec2_app: Creation complete after 38s [id=i-0d09f6f63a208e098]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (show)
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/_resources_with_Terraform_master
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] {
[Pipeline] sh
+ pwd
/var/lib/jenkins/workspace/_resources_with_Terraform_master/np-acc/us-east-1/dev-vpc/dev-env/c2o/ec2
[Pipeline] sh
+ ls -ltra
total 12
-rw-r--r--. 1 jenkins jenkins  241 Dec 26 03:10 main.tf
-rw-r--r--. 1 jenkins jenkins  111 Dec 26 03:10 locals.tf
drwxr-xr-x. 4 jenkins jenkins   32 Dec 26 03:10 ..
drwxr-xr-x. 4 jenkins jenkins   36 Dec 26 03:10 .terraform
-rw-r--r--. 1 jenkins jenkins 2917 Dec 26 03:14 terraform.tfstate
drwxr-xr-x. 3 jenkins jenkins   81 Dec 26 03:14 .
[Pipeline] sh
+ /usr/local/bin/terraform show

# module.my_ec2.aws_instance.ec2_app:
resource "aws_instance" "ec2_app" {
    ami                          = "ami-0520e698dd500b1d1"
    arn                          = "arn:aws:ec2:us-east-2:628072378636:instance/i-0d09f6f63a208e098"
    associate_public_ip_address  = true
    availability_zone            = "us-east-2b"
    cpu_core_count               = 1
    cpu_threads_per_core         = 1
    disable_api_termination      = false
    ebs_optimized                = false
    get_password_data            = false
    id                           = "i-0d09f6f63a208e098"
    instance_state               = "running"
    instance_type                = "t2.micro"
    ipv6_address_count           = 0
    ipv6_addresses               = []
    monitoring                   = false
    primary_network_interface_id = "eni-058783497ad8eb45c"
    private_dns                  = "ip-172-31-28-110.us-east-2.compute.internal"
    private_ip                   = "172.31.28.110"
    public_dns                   = "ec2-3-19-239-68.us-east-2.compute.amazonaws.com"
    public_ip                    = "3.19.239.68"
    security_groups              = [
        "default",
    ]
    source_dest_check            = true
    subnet_id                    = "subnet-cb277cb1"
    tags                         = {
        "Name" = "app03"
    }
    tenancy                      = "default"
    volume_tags                  = {}
    vpc_security_group_ids       = [
        "sg-2c778848",
    ]

    credit_specification {
        cpu_credits = "standard"
    }

    root_block_device {
        delete_on_termination = true
        encrypted             = false
        iops                  = 100
        volume_id             = "vol-0adc063010f0afd38"
        volume_size           = 10
        volume_type           = "gp2"
    }
}
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] End of Pipeline

GitHub has been notified of this commit’s build result

Finished: SUCCESS
